
from pymol.cgo import *
from pymol import cmd
import numpy as np
from chempy.brick import Brick
final_calls = {}
        

opt_cycle_test = [
        
COLOR,0.5179675256788087,0.321798116389642,0.2661962056662344,1.0,SPHERE,1.271,-3.913,-5.663,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-4.582,-3.329,4.114,0.3,COLOR,0.46174857797948843,0.25144077425439115,0.28179839042791466,1.0,SPHERE,-5.386,3.913,-2.163,0.3,COLOR,0.5264003678337066,0.3323517177099296,0.2638558779519824,1.0,SPHERE,2.057,6.332,2.163,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-3.329,-2.418,5.663,0.3,COLOR,0.28465889272662975,0.029815146528350822,0.33094527242720734,1.0,SPHERE,1.75,-5.386,4.114,0.3,COLOR,0.4252062619749303,0.20570850186647804,0.29193981052300677,1.0,SPHERE,1.75,5.386,4.114,0.3,COLOR,0.3774201564305081,0.14590476105151476,0.305201667570435,1.0,SPHERE,4.582,-3.329,4.114,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,6.657,0.0,2.163,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-1.75,-5.386,4.114,0.3,COLOR,0.0,1.0,0.0,1.0,SPHERE,3.329,-2.418,5.663,0.3,COLOR,0.0,1.0,0.0,1.0,SPHERE,-2.163,6.657,0.0,0.3,COLOR,0.0,1.0,0.0,1.0,SPHERE,-2.057,6.332,-2.163,0.3,COLOR,0.0,1.0,0.0,1.0,SPHERE,-5.663,4.114,0.0,0.3,COLOR,0.27903699795669773,0.02277941231482573,0.33250549090337533,1.0,SPHERE,-2.163,-6.657,0.0,0.3,COLOR,0.3830420512004401,0.15294049526503983,0.30364144909426694,1.0,SPHERE,1.271,3.913,5.663,0.3,COLOR,0.28465889272662975,0.029815146528350822,0.33094527242720734,1.0,SPHERE,-4.582,-3.329,-4.114,0.3,COLOR,0.3015245770364258,0.05092234916892609,0.32626461699870324,1.0,SPHERE,2.057,-6.332,2.163,0.3,COLOR,0.48142520967425045,0.2760658440017289,0.27633762576132653,1.0,SPHERE,-2.057,6.332,2.163,0.3,COLOR,0.2959026822664938,0.04388661495540099,0.3278248354748713,1.0,SPHERE,-5.663,-4.114,0.0,0.3,COLOR,0.28184794534166374,0.026297279421588278,0.33172538166529136,1.0,SPHERE,-2.057,-6.332,2.163,0.3,COLOR,0.28184794534166374,0.026297279421588278,0.33172538166529136,1.0,SPHERE,5.386,-3.913,2.163,0.3,COLOR,0.619161631537585,0.4484413322330936,0.23811227309521,1.0,SPHERE,-3.329,2.418,-5.663,0.3,COLOR,0.6894353161617353,0.5363880099021573,0.21860954214310974,1.0,SPHERE,5.386,3.913,2.163,0.3,COLOR,0.45331573582459034,0.24088717293410347,0.2841387181421667,1.0,SPHERE,-1.75,5.386,-4.114,0.3,COLOR,0.2902807874965618,0.03685088074187591,0.3293850539510393,1.0,SPHERE,-1.75,-5.386,-4.114,0.3,COLOR,0.2987136296514598,0.04740448206216354,0.32704472623678726,1.0,SPHERE,-7.0,0.0,0.0,0.3,COLOR,0.30714647180635785,0.057958083382451175,0.32470439852253524,1.0,SPHERE,-5.386,-3.913,-2.163,0.3,COLOR,0.32963405088608594,0.08610102023655154,0.31846352461786315,1.0,SPHERE,-2.057,-6.332,-2.163,0.3,COLOR,0.28184794534166374,0.026297279421588278,0.33172538166529136,1.0,SPHERE,-6.657,0.0,-2.163,0.3,COLOR,0.5882412103029588,0.40974479405870556,0.24669347471413416,1.0,SPHERE,-1.75,5.386,4.114,0.3,COLOR,0.0,1.0,0.0,1.0,SPHERE,1.75,1.271,6.657,0.3,COLOR,1.0,0.0,0.0,1.0,SPHERE,-5.386,-3.913,2.163,0.3,COLOR,0.8215498432551377,0.7017277639199968,0.18194440795316122,1.0,SPHERE,2.163,6.657,0.0,0.3

            ]
cmd.load_cgo(opt_cycle_test, "opt_cycle_test", state=1)
cmd.set("cgo_transparency", 0, "opt_cycle_test")
        

cbar_dummy_data = np.array([[[0.,0.],
  [0.,0.]],

 [[0.,0.],
  [0.,0.]]])
cbar_dummy = Brick.from_numpy(cbar_dummy_data, [1.e-08,1.e-08,1.e-08], origin=[0,0,0])
cmd.load_brick(cbar_dummy, "cbar_dummy")
cbar_dummy_data = None


cmd.ramp_new("opt_cycle_axis_test", "cbar_dummy", range = [0.0,10.1010101010101,20.2020202020202,30.3030303030303,40.4040404040404,50.505050505050505,60.6060606060606,70.7070707070707,80.8080808080808,90.9090909090909,101.01010101010101,111.1111111111111,121.2121212121212,131.3131313131313,141.4141414141414,151.5151515151515,161.6161616161616,171.7171717171717,181.8181818181818,191.91919191919192,202.02020202020202,212.1212121212121,222.2222222222222,232.3232323232323,242.4242424242424,252.5252525252525,262.6262626262626,272.7272727272727,282.8282828282828,292.9292929292929,303.030303030303,313.1313131313131,323.2323232323232,333.3333333333333,343.4343434343434,353.5353535353535,363.6363636363636,373.73737373737373,383.83838383838383,393.93939393939394,404.04040404040404,414.1414141414141,424.2424242424242,434.3434343434343,444.4444444444444,454.5454545454545,464.6464646464646,474.7474747474747,484.8484848484848,494.9494949494949,505.050505050505,515.1515151515151,525.2525252525252,535.3535353535353,545.4545454545454,555.5555555555555,565.6565656565656,575.7575757575758,585.8585858585858,595.959595959596,606.060606060606,616.1616161616162,626.2626262626262,636.3636363636364,646.4646464646464,656.5656565656565,666.6666666666666,676.7676767676767,686.8686868686868,696.9696969696969,707.070707070707,717.1717171717171,727.2727272727273,737.3737373737373,747.4747474747475,757.5757575757575,767.6767676767677,777.7777777777777,787.8787878787879,797.9797979797979,808.0808080808081,818.1818181818181,828.2828282828282,838.3838383838383,848.4848484848484,858.5858585858585,868.6868686868686,878.7878787878788,888.8888888888888,898.989898989899,909.090909090909,919.1919191919192,929.2929292929292,939.3939393939394,949.4949494949494,959.5959595959596,969.6969696969696,979.7979797979797,989.8989898989898,1000.0], color = [[1.0, 0.0, 0.0], [0.2734151031867657, 0.015743678101300642, 0.3340657093795434], [0.28184794534166374, 0.026297279421588278, 0.33172538166529136], [0.28746984011159576, 0.033333013635113366, 0.3301651631891233], [0.2959026822664938, 0.04388661495540099, 0.3278248354748713], [0.3015245770364258, 0.05092234916892609, 0.32626461699870324], [0.30995741919132386, 0.06147595048921372, 0.3239242892844512], [0.3183902613462219, 0.07202955180950135, 0.3215839615701992], [0.3240121561161539, 0.07906528602302645, 0.3200237430940312], [0.3324449982710519, 0.08961888734331408, 0.3176834153797791], [0.3380668930409839, 0.09665462155683917, 0.3161231969036111], [0.34649973519588195, 0.10720822287712681, 0.3137828691893591], [0.35493257735078, 0.11776182419741445, 0.3114425414751071], [0.360554472120712, 0.1247975584109395, 0.30988232299893903], [0.36898731427561005, 0.13535115973122716, 0.307541995284687], [0.37460920904554207, 0.14238689394475224, 0.30598177680851896], [0.3830420512004401, 0.15294049526503983, 0.30364144909426694], [0.3886639459703721, 0.15997622947856496, 0.30208123061809894], [0.39709678812527016, 0.1705298307988526, 0.2997409029038469], [0.40552963028016814, 0.1810834321191402, 0.29740057518959484], [0.4111515250501002, 0.18811916633266532, 0.29584035671342684], [0.41958436720499825, 0.19867276765295294, 0.2935000289991748], [0.4252062619749303, 0.20570850186647804, 0.29193981052300677], [0.4336391041298283, 0.21626210318676567, 0.28959948280875475], [0.44207194628472635, 0.2268157045070533, 0.2872591550945027], [0.4476938410546583, 0.23385143872057837, 0.2856989366183347], [0.4561266832095564, 0.24440504004086608, 0.28335860890408265], [0.46174857797948843, 0.25144077425439115, 0.28179839042791466], [0.4701814201343864, 0.26199437557467875, 0.2794580627136626], [0.4758033149043184, 0.2690301097882038, 0.2778978442374946], [0.48423615705921647, 0.27958371110849145, 0.27555751652324256], [0.4926689992141145, 0.2901373124287791, 0.2732171888089905], [0.49829089398404647, 0.29717304664230415, 0.2716569703328225], [0.5067237361389446, 0.30772664796259186, 0.26931664261857047], [0.5123456309088766, 0.31476238217611696, 0.2677564241424024], [0.5207784730637746, 0.3253159834964045, 0.2654160964281504], [0.5292113152186726, 0.33586958481669216, 0.2630757687138984], [0.5348332099886046, 0.34290531903021726, 0.2615155502377303], [0.5432660521435027, 0.35345892035050486, 0.25917522252347835], [0.5488879469134347, 0.36049465456403, 0.2576150040473103], [0.5573207890683327, 0.37104825588431767, 0.2552746763330582], [0.5657536312232307, 0.3816018572046052, 0.25293434861880626], [0.5713755259931628, 0.38863759141813037, 0.2513741301426382], [0.5798083681480608, 0.39919119273841797, 0.2490338024283862], [0.5854302629179928, 0.40622692695194307, 0.24747358395221813], [0.5938631050728909, 0.4167805282722307, 0.2451332562379661], [0.5994849998428229, 0.4238162624857558, 0.2435730377617981], [0.6079178419977209, 0.4343698638060434, 0.24123271004754604], [0.616350684152619, 0.4449234651263311, 0.23889238233329402], [0.621972578922551, 0.4519591993398562, 0.237332163857126], [0.630405421077449, 0.46251280066014383, 0.23499183614287394], [0.636027315847381, 0.46954853487366893, 0.23343161766670595], [0.6444601580022791, 0.48010213619395653, 0.23109128995245393], [0.6528930001571771, 0.4906557375142441, 0.2287509622382019], [0.6585148949271091, 0.4976914717277692, 0.22719074376203385], [0.6669477370820072, 0.5082450730480569, 0.22485041604778183], [0.6725696318519392, 0.515280807261582, 0.22329019757161378], [0.6810024740068372, 0.5258344085818696, 0.22094986985736176], [0.6866243687767692, 0.5328701427953947, 0.21938965138119376], [0.6950572109316673, 0.5434237441156824, 0.21704932366694168], [0.7034900530865653, 0.55397734543597, 0.21470899595268966], [0.7091119478564973, 0.5610130796494951, 0.21314877747652167], [0.7175447900113954, 0.5715666809697827, 0.21080844976226965], [0.7231666847813274, 0.5786024151833077, 0.20924823128610162], [0.7315995269362254, 0.5891560165035954, 0.20690790357184957], [0.7400323690911235, 0.599709617823883, 0.20456757585759755], [0.7456542638610555, 0.6067453520374081, 0.20300735738142953], [0.7540871060159535, 0.6172989533576958, 0.20066702966717748], [0.7597090007858854, 0.6243346875712208, 0.19910681119100948], [0.7681418429407836, 0.6348882888915085, 0.19676648347675743], [0.7765746850956815, 0.6454418902117961, 0.1944261557625054], [0.7821965798656135, 0.6524776244253212, 0.19286593728633739], [0.7906294220205116, 0.6630312257456089, 0.19052560957208534], [0.7962513167904436, 0.670066959959134, 0.1889653910959173], [0.8046841589453416, 0.6806205612794215, 0.1866250633816653], [0.8103060537152736, 0.6876562954929466, 0.18506484490549727], [0.8187388958701716, 0.6982098968132341, 0.18272451719124524], [0.8271717380250697, 0.7087634981335219, 0.1803841894769932], [0.8327936327950017, 0.715799232347047, 0.17882397100082517], [0.8412264749498998, 0.7263528336673346, 0.17648364328657315], [0.8468483697198318, 0.7333885678808597, 0.17492342481040513], [0.8552812118747298, 0.7439421692011474, 0.17258309709615308], [0.8637140540296278, 0.7544957705214349, 0.17024276938190108], [0.8693359487995599, 0.7615315047349601, 0.16868255090573303], [0.8777687909544579, 0.7720851060552477, 0.166342223191481], [0.88339068572439, 0.7791208402687728, 0.16478200471531299], [0.891823527879288, 0.7896744415890604, 0.16244167700106094], [0.89744542264922, 0.7967101758025855, 0.1608814585248929], [0.905878264804118, 0.8072637771228731, 0.1585411308106409], [0.9143111069590161, 0.8178173784431608, 0.15620080309638884], [0.919933001728948, 0.8248531126566858, 0.15464058462022084], [0.9283658438838461, 0.8354067139769735, 0.1523002569059688], [0.9339877386537782, 0.8424424481904986, 0.15074003842980077], [0.9424205808086761, 0.8529960495107862, 0.14839971071554875], [0.9508534229635742, 0.8635496508310739, 0.1460593830012967], [0.9564753177335062, 0.870585385044599, 0.14449916452512868], [0.9649081598884042, 0.8811389863648866, 0.14215883681087665], [0.9705300546583362, 0.8881747205784117, 0.14059861833470863], [0.9789628968132342, 0.8987283218986993, 0.1382582906204566], [0.0, 1.0, 0.0]], state = 1)
cmd.delete("cbar_dummy")
cmd.pseudoatom("labels_test", label="350.0", pos = [1.271, -3.913, -5.663], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="0.0", pos = [-4.582, -3.329, 4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="273.0", pos = [-5.386, 3.913, -2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="362.0", pos = [2.057, 6.332, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="0.0", pos = [-3.329, -2.418, 5.663], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="27.0", pos = [1.75, -5.386, 4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="220.0", pos = [1.75, 5.386, 4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="156.0", pos = [4.582, -3.329, 4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="0.0", pos = [6.657, 0.0, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="0.0", pos = [-1.75, -5.386, 4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="1000.0", pos = [3.329, -2.418, 5.663], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="1000.0", pos = [-2.163, 6.657, 0.0], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="1000.0", pos = [-2.057, 6.332, -2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="1000.0", pos = [-5.663, 4.114, 0.0], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="18.0", pos = [-2.163, -6.657, 0.0], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="163.0", pos = [1.271, 3.913, 5.663], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="24.0", pos = [-4.582, -3.329, -4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="47.0", pos = [2.057, -6.332, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="300.0", pos = [-2.057, 6.332, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="41.0", pos = [-5.663, -4.114, 0.0], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="22.0", pos = [-2.057, -6.332, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="20.0", pos = [5.386, -3.913, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="490.0", pos = [-3.329, 2.418, -5.663], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="586.0", pos = [5.386, 3.913, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="258.0", pos = [-1.75, 5.386, -4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="35.0", pos = [-1.75, -5.386, -4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="43.0", pos = [-7.0, 0.0, 0.0], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="55.0", pos = [-5.386, -3.913, -2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="87.0", pos = [-2.057, -6.332, -2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="21.0", pos = [-6.657, 0.0, -2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="446.0", pos = [-1.75, 5.386, 4.114], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="1000.0", pos = [1.75, 1.271, 6.657], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="0.0", pos = [-5.386, -3.913, 2.163], state = 1)

cmd.set("label_size", 24, "labels_test")

cmd.pseudoatom("labels_test", label="771.0", pos = [2.163, 6.657, 0.0], state = 1)

cmd.set("label_size", 24, "labels_test")


test_opt_cycles_points = cmd.group("test_opt_cycles_points")
cmd.group("test_opt_cycles_points", "open")

cmd.group("test_opt_cycles_points", "opt_cycle_test", "add"),
cmd.group("test_opt_cycles_points", "opt_cycle_axis_test", "add"),
cmd.group("test_opt_cycles_points", "labels_test", "add")

for call, kwargs in final_calls.items():
    call(**kwargs)
